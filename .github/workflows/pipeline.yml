---
on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.23.4]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    - name: Compile
      run: make build
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6.5.0
      with:
        version: v1.62.2
    - name: Test
      run: make test-unit
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.3.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        fail_ci_if_error: true
        files: ./coverage.txt
        verbose: true
    - name: Image Build
      run: make image
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        install-only: true
        version: "~> v2"
    - name: Test GoReleaser
      run: make test-release
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=quay.io/kohlstechnology/blackbox-helloworld-responder
          VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
          registry: quay.io
      - name: Build and push to quay.io
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          platforms: linux/amd64,linux/arm64
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          install-only: true
          version: "~> v2"
      - name: Run GoReleaser
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
